{"version":3,"sources":["index.js"],"names":["Square","className","onClick","props","console","log","value","this","React","Component","calculateWinner","squares","lines","i","length","a","b","c","Board","num1","num2","items","push","renderSquare","getSquares","ShoppingList","name","Clock","state","date","Date","timerId","setInterval","tick","clearInterval","setState","toLocaleTimeString","Counter","count","xmlns","width","height","viewBox","fillRule","d","Game","history","Array","fill","stepNum","xIsNext","slice","concat","step","status","current","winner","moves","map","move","description","jumpToMove","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25e7c141.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// https://stackoverflow.com/questions/28329382/understanding-unique-keys-for-array-children-in-react-js\r\n//https://www.freecodecamp.org/news/https-medium-com-gladchinda-hacks-for-creating-javascript-arrays-a1b80cb372b/\r\n\r\nclass Square extends React.Component {\r\n\r\n\r\n\r\n\r\n    render() {\r\n      return (\r\n        <button \r\n        className=\"square\" \r\n        onClick={()=>{\r\n          this.props.onClick();\r\n          console.log(this.props.value)}\r\n          }>\r\n          {this.props.value}\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  function range(start, end, step = 1) {\r\n  \r\n    const allNumbers = [start, end, step].every(Number.isFinite);\r\n  \r\n    if (!allNumbers) {\r\n      throw new TypeError('range() expects only finite numbers as arguments.');\r\n    }\r\n    \r\n    if (step <= 0) {\r\n      throw new Error('step must be a number greater than 0.');\r\n    }\r\n    \r\n    if (start > end) {\r\n      step = -step;\r\n    }\r\n    \r\n    const length = Math.floor(Math.abs((end - start) / step)) + 1;\r\n    \r\n    return Array.from(Array(length), (x, index) => start + index * step);\r\n    \r\n  }\r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for(let i = 0;i<lines.length;i++){\r\n      const[a,b,c] = lines[i];\r\n      if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){\r\n        console.log(`${a} ${b} ${c}`);\r\n        return squares[a]\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  \r\n  class Board extends React.Component {\r\n\r\n \r\n\r\n\r\n    renderSquare(i) {\r\n      return <Square  \r\n      value={this.props.squares[i]} \r\n      key={i}\r\n      onClick ={()=> {this.props.onClick(i)}}\r\n      />;\r\n    }\r\n\r\n    getSquares(num1,num2){\r\n      const items = [];\r\n      for(let i = num1;i<num2;i++){\r\n        items.push(this.renderSquare(i))\r\n      }\r\n      return items;\r\n    }\r\n  \r\n    render() {\r\n      \r\n\r\n      return (\r\n        <div>\r\n         \r\n \r\n          <div className=\"board-row\">\r\n            {this.getSquares(0,3)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.getSquares(3,6)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.getSquares(6,9)}\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  \r\n  class ShoppingList extends React.Component {\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"shopping-list\">\r\n          <h1>Список покупок для {this.props.name}</h1>\r\n          <ul>\r\n            <li>Instagram</li>\r\n            <li>WhatsApp</li>\r\n            <li>Oculus</li>\r\n          </ul>\r\n        </div>\r\n\r\n      );\r\n    }\r\n  }\r\n\r\n  class Clock extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {date:new Date()};\r\n    }  \r\n\r\n    componentDidMount(){\r\n      this.timerId = setInterval(\r\n        ()=>this.tick(),\r\n        1000\r\n      )\r\n    }\r\n    componentWillUnmount(){\r\n      clearInterval(this.timerId);\r\n    }\r\n    tick(){\r\n      this.setState({\r\n        date:new Date()\r\n      });\r\n    }\r\n    render(){\r\n      return(\r\n        <div>\r\n          <h1>Custom timer</h1>\r\n          <h2>Now is {this.state.date.toLocaleTimeString()}</h2>\r\n        </div>\r\n      )\r\n      \r\n    }\r\n\r\n  }\r\n\r\n\r\n  class Counter extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state={       \r\n        count:0,  \r\n      }\r\n    }\r\n    render(){\r\n      return (\r\n        <div className=\"like-widget\">\r\n          <span>Likes {this.state.count}</span>\r\n\r\n          <span onClick={() => this.setState({ count: this.state.count + 1 })} className=\"like-heart\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\"  className=\" bi bi-heart-fill \" viewBox=\"0 0 16 16\">\r\n            <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\r\n          </svg>\r\n          </span>\r\n          \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  class Game extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n      \r\n      this.state={\r\n        history:[{\r\n          squares:Array(9).fill(null)\r\n        }],\r\n        stepNum:0,\r\n        xIsNext:true,\r\n\r\n      }\r\n    }\r\n\r\n\r\n    handleClick(i){\r\n\r\n      const history = this.state.history.slice(0,this.state.stepNum+1);\r\n      const current = history[history.length-1];\r\n      const squares  = current.squares.slice();//copy array without changing initial array\r\n\r\n      if(calculateWinner(squares)||squares[i]){\r\n        return;\r\n      }\r\n      squares[i] =this.state.xIsNext? \"X\":\"O\";\r\n\r\n      this.setState({\r\n        history:history.concat([{\r\n          squares:squares,\r\n        }]),\r\n        stepNum:history.length,\r\n        xIsNext:!this.state.xIsNext\r\n      });\r\n\r\n    }\r\n\r\n    jumpToMove(step){\r\n        \r\n      this.setState({\r\n        stepNum:step,\r\n        xIsNext:(step%2)===0,\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNum];\r\n      const winner = calculateWinner(current.squares);\r\n      let status;\r\n      if(winner){\r\n        status = `Winner is ${winner} player`;\r\n      }else{\r\n        status = `Next player: ${this.state.xIsNext? \"X\":\"O\"}`;\r\n      }\r\n      const moves = history.map((step,move)=>{\r\n        const description = move?\r\n        `Go to move number ${move}`:\r\n        `Got to the start`;\r\n        return(\r\n          <li key={move}>\r\n            <button className=\"btn btn-primary\" onClick={()=>this.jumpToMove(move)}>{description}</button>\r\n          </li>\r\n        )\r\n      });\r\n\r\n      \r\n\r\n\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n          \r\n            <Board \r\n              squares={current.squares}\r\n              onClick={(i)=>this.handleClick(i)}\r\n            />\r\n            <ShoppingList name=\"TestName\"/>\r\n            <Clock />\r\n            <Counter/>\r\n          </div>\r\n          <div className=\"game-info\">\r\n          <div className=\"status\">{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}